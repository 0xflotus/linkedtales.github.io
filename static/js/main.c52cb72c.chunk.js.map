{"version":3,"sources":["Components/Footer/Footer.tsx","Components/Share/Share.tsx","Pages/Index/Index.tsx","Components/Chart/Chart.tsx","Components/Header/Header.tsx","Components/Ranking/Ranking.tsx","Components/RankingMini/RankingMini.tsx","Components/Tip/Tip.tsx","Components/VerticalCarousel/VerticalCarousel.tsx","Pages/Experiences/Experiences.tsx","serviceWorker.ts","index.tsx"],"names":["Footer","_ref","_ref$isAlternative","isAlternative","_ref$hasToSeeMore","hasToSeeMore","react_default","a","createElement","className","concat","src","alt","href","data-show-count","aria-label","medias","name","url","Share","map","_ref2","i","key","title","target","rel","share","Index","Helmet","content","property","react_router_dom","to","Components_Share_Share","Components_Footer_Footer","Chart","state","chartId","Math","floor","random","chartReference","React","createRef","chartOptions","this","props","chartDiv","current","window","defaults","global","defaultFontColor","scale","gridLines","display","id","toString","ref","Component","companies","Header","subtitle","slice","length","companiesGroup","company","j","dangerouslySetInnerHTML","__html","Ranking","image","items","subitems","_ref3","number","arrow","RankingMini","Tip","_ref$text","text","VerticalCarousel","background","parallaxRef","useRef","useEffect","e1","setBackgroundValue","value","style","backgroundPositionY","document","onscroll","scrollSize","scrollY","backgroundImage","lowStayRanking","highStayRanking","averageYearsChart","type","data","labels","datasets","label","backgroundColor","options","maintainAspectRatio","legend","position","averageMonthsChart","scales","yAxes","ticks","min","fontColor","xAxes","lowStayRankingMini","highStayRankingMini","App","Components_Header_Header","Components_VerticalCarousel_VerticalCarousel","Components_Ranking_Ranking","Object","assign","Components_Tip_Tip","Components_RankingMini_RankingMini","Components_Chart_Chart","Boolean","location","hostname","match","index","react_router","path","exact","component","Experiences","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c52cb72c.chunk.js","sourcesContent":["import React from 'react';\nimport './Footer.scss';\n\nconst Footer = ({ isAlternative = false, hasToSeeMore = true }) =>\n  <footer className={`footer ${isAlternative && 'alternative'}`}>\n    <div>\n      <img src=\"assets/logo.png\" alt=\"logo\" />\n      <br />\n      <a className=\"github-button\" href=\"https://github.com/linkedtales/linkedtales.github.io\" data-show-count=\"true\" aria-label=\"Star linkedtales/linkedtales.github.io on GitHub\">Star</a>\n    </div>\n    <div>\n      made to engineers by engineers\n      <br/>\n      {\n        hasToSeeMore &&\n        <a href=\"http://linkedtales.github.io\">see more of our infographics <br/> linkedtales.github.io</a>\n      }\n      <br />\n    </div>\n  </footer>\n\nexport default Footer;\n","import React from 'react';\nimport './Share.scss';\n\nconst medias = [\n  {\n    name: 'Facebook',\n    url: 'https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Flinkedtales.github.io%2Fsoftware-engineering-experiences%2F&quote=Top%20Companies%20Software%20Engineers%20Experiences',\n  },\n  {\n    name: 'Twitter',\n    url: 'https://twitter.com/intent/tweet?source=https%3A%2F%2Flinkedtales.github.io%2Fsoftware-engineering-experiences%2F&text=Top%20Companies%20Software%20Engineers%20Experiences:%20https%3A%2F%2Flinkedtales.github.io%2Fsoftware-engineering-experiences%2F',\n  },\n  {\n    name: 'Reddit',\n    url: 'http://www.reddit.com/submit?url=https%3A%2F%2Flinkedtales.github.io%2Fsoftware-engineering-experiences%2F&title=Top%20Companies%20Software%20Engineers%20Experiences'\n  },{\n    name: 'LinkedIn',\n    url: 'http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Flinkedtales.github.io%2Fsoftware-engineering-experiences%2F&title=Top%20Companies%20Software%20Engineers%20Experiences&summary=Discover%20insights%20about%20your%20career%20based%20on%20statistics%20from%20thousands%20of%20top%20company%20professionals%20worldwide%2C%20it\\'s%20totally%20free!&source=https%3A%2F%2Flinkedtales.github.io%2Fsoftware-engineering-experiences%2F'\n  }\n]\n\nconst Share = ({ isAlternative = false }) =>\n  <section className={`share ${isAlternative && 'alternative'}`}>\n    <div className=\"share share-text\">\n      help us do more, please share it!\n    </div>\n    <ul className=\"share__buttons\">\n      {\n        medias.map(({ name, url }, i) =>\n          <li key={i}>\n            <a href={url} title={`Share on ${name}`} target=\"_blank\" rel=\"noopener noreferrer\">\n              <img alt={`Share on ${name}`} src={`assets/social/${name}.svg`} />\n            </a>\n          </li>\n        )\n      }\n    </ul>\n  </section>\n\nexport default Share;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Helmet } from 'react-helmet';\n\nimport Footer from '../../Components/Footer/Footer';\n\n\nimport './Index.scss';\nimport Share from '../../Components/Share/Share';\n\nconst share = {\n  url: 'https://linkedtales.github.io/',\n  title: 'LinkedTales',\n  description: 'Discover free insights about your career based on statistics from thousands of top company professionals worldwide.',\n  image: 'https://linkedtales.github.io/assets/experiences.png'\n}\n\nconst Index: React.FC = () =>\n  <div className=\"wrapper\">\n    <Helmet>\n      <title>LinkedTales - Top Software Engineer Professional Experiences</title>\n      <meta name=\"title\" content=\"LinkedTales - Inisghts for your career\" />\n      <meta name=\"description\" content=\"Discover insights about your career based on statistics from thousands of top company professionals worldwide, it's totally free!\" />\n      <meta name=\"keywords\" content=\"statistics, company, career, profession, infographic\" />\n    \n      <meta property=\"og:url\" content={share.url} />\n      <meta property=\"og:title\" content={share.title} />\n      <meta property=\"og:description\" content={share.description} />\n      <meta property=\"og:image\" content={share.image} />\n\n      <meta property=\"twitter:url\" content={share.url} />\n      <meta property=\"twitter:title\" content={share.title} />\n      <meta property=\"twitter:description\" content={share.description} />\n      <meta property=\"twitter:image\" content={share.image} />\n    </Helmet>\n    <header>\n      <div className=\"index__header\">\n        <div className=\"index__header__logo alternative\">\n          <img src={\"/assets/logo.png\"} alt=\"logo\"/>\n        </div>\n      </div>\n      <div className=\"index__body alternative\">\n        <div className=\"index__body__text\">\n          The best insights for your carrer development from professionals worldwide!\n        </div>\n        <div className=\"index__body__image\">\n          <img src={\"/assets/people.png\"} alt=\"people\" />\n        </div>\n      </div>\n    </header>\n    <main className=\"index__list\">\n      <strong>Published Articles:</strong>\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/software-engineer-professional-experiences\">Professional Experiences</Link>\n          </li>\n        </ul>\n      </nav>\n    </main>\n    <Share />\n    <Footer hasToSeeMore={false}  isAlternative={true} />\n  </div>\n\nexport default Index;\n","import React from 'react';\nimport './Chart.scss';\n\ninterface Dataset {\n  backgroundColor: string\n  data: number[]\n}\n\ninterface Props {\n  title: string;\n  chartOptions: object;\n  isAlternative?: boolean;\n};\n\ndeclare global {\n  interface Window {\n    Chart: any;\n  }\n}\n\nclass Chart extends React.Component<Props> {\n  state = {\n    chartId: Math.floor(Math.random() * 100000)\n  };\n\n  chartReference = React.createRef<HTMLCanvasElement>()\n\n  componentDidMount() {\n    const chartOptions = this.props.chartOptions\n\n    //ar ctx = document.getElementById('chart1').getContext('2d');\n    const chartDiv = this.chartReference.current;\n    \n    window.Chart.defaults.global.defaultFontColor = 'white';\n    window.Chart.defaults.scale.gridLines.display = false;\n\n    new window.Chart(chartDiv, chartOptions);\n  }\n\n  render() {\n    return (\n      <section className={`chart ${this.props.isAlternative && ' alternative'}`} >\n        <div className=\"chart__title title\">{this.props.title}</div>\n        <canvas className=\"chart__canvas\" id={this.state.chartId.toString()} ref={this.chartReference}></canvas>\n      </section>\n    );\n  }\n}\n\nexport default Chart;\n","import React from 'react';\nimport './Header.scss';\n\nconst companies = ['airbnb','apple','aws','facebook',\n'google','linkedin','microsoft','netflix','spotify',\n'hewlett-packard','booking','oracle','intel','adobe',\n'cisco','ibm','uber','zoom','twitter','yahoo']\n\ninterface Props {\n  title: string;\n  subtitle: string;\n}\n\nconst Header : React.FC<Props>  = ({ title, subtitle } : Props) =>\n  <section className=\"header\">\n    <div className=\"header__title title\">\n      Top Software Engineer\n    </div>\n    <div className=\"header__subtitle\">\n      {title}\n    </div>\n    <div className=\"header__companies\">\n      {\n        [companies.slice(0, companies.length / 2),\n         companies.slice(companies.length / 2)]\n        .map((companiesGroup, i) =>\n          (<div className=\"header__companies__group\" key={i}>\n          {\n            companiesGroup.map((company, j) =>\n              (<img src={`assets/companies/${company}.png`} alt={company} key={`${i}-${j}`} />))\n          }\n          </div>))\n      }\n    </div>\n    <div className=\"header__headline alternative\" dangerouslySetInnerHTML={{__html: subtitle }} />\n  </section>\n  \nexport default Header;\n","import React from 'react';\nimport './Ranking.scss';\n\ninterface Props {\n  title: string;\n  image: string;\n  items: any[];\n  isAlternative?: boolean;\n}\n\nconst Ranking = ({ title, image, items, isAlternative = false } : Props) =>\n  <section className={`ranking${isAlternative && ' alternative'}`}>\n    <div className=\"ranking__title title\">\n      <div className=\"ranking__title__text\">\n        { title }\n      </div>\n      <div className=\"ranking__title__image\" >\n        <img src={`assets/${image}`} alt={image}  />\n      </div>      \n    </div>\n    <div className=\"ranking__content\">\n      {\n        items.map(({ title, subitems} : { title: string, subitems: any[]}, i: number) =>\n          <div className=\"ranking__content__table\" key={i}>\n            <div className=\"ranking__content__table__title\">{ title }</div>\n            {\n              subitems.map(({ company, number, arrow } : { company: string, number: string, arrow: string}, j: number) =>\n                <div className=\"ranking__content__table__item\" key={`${i}-${j}`}>\n                  {\n                    (arrow === \"-\")\n                      ? <span className=\"ranking__content__table__item__arrowimage\">-</span>\n                      : (arrow)\n                        ? <img src={`assets/${arrow}.png`} className=\"ranking__content__table__item__arrowimage\" alt={`${arrow} arrow`}/> \n                        : <span className=\"ranking__content__table__item__numeral\">#{j}</span>\n                  }\n                  <img className=\"ranking__content__table__item__image border\" src={`assets/companies/${company}.png`} alt={company} />\n                  <div className=\"ranking__content__table__item__number\">\n                    { number }\n                  </div>\n                </div>\n              )\n            }\n          </div>\n        )\n      }\n    </div>\n  </section>\n  \nexport default Ranking;\n","import React from 'react';\nimport './RankingMini.scss';\n\ninterface Props {\n  title: string;\n  items: any[];\n  isAlternative?: boolean;\n}\n\nconst RankingMini = ({ title, items, isAlternative = false } : Props) =>\n  <section className={`rankingmini ${isAlternative && ' alternative'}`}>\n    <div className=\"rankingmini__title title\">\n      <div className=\"detail\">% of top-company engineers which stayed more than 60 months</div>\n    </div>\n    <div className=\"rankingmini__ranking\">     \n      {\n        items.map(({ company, number } : {company: string, number: string}) =>\n          <div className=\"rankingmini__ranking__item\">\n            <img src={`assets/companies/${company}.png`} className=\"border\" alt={company} />\n            <div>{number} %</div>\n          </div>\n        ) \n      } \n    </div>\n  </section>\n  \nexport default RankingMini;\n","import React from 'react';\nimport './Tip.scss';\n\nconst Tip = ({ isAlternative = false, text = \"\" }) =>\n  <div className={`tip ${isAlternative && 'alternative'}`}>\n    <div className=\"tip__image\">\n      <img src=\"/assets/light.png\" alt=\"light\" />\n    </div>\n    <div className=\"tip__text\">\n      {text}\n    </div>\n  </div>\n\nexport default Tip;\n","import React, { useEffect } from 'react'\nimport 'chart.js'\nimport './VerticalCarousel.scss'\n\ninterface Props {\n  items: any[];\n  background: string;\n}\n\nconst VerticalCarousel: React.FC<Props> = ({ items, background } : Props) => {\n  const parallaxRef = React.useRef<HTMLDivElement>(null)\n  useEffect(() => {\n    const e1 = parallaxRef.current;\n    const TOP_OFFSET = 600\n    const setBackgroundValue = (value: number) => {\n      if(e1)\n        e1.style.backgroundPositionY = value - TOP_OFFSET + \"px\"\n    }\n    setBackgroundValue(0)\n    document.onscroll = () => {\n      const scrollSize = window.scrollY;\n      setBackgroundValue(scrollSize)\n    }    \n  })\n\n  return <section className=\"vertical-carousel\">\n    <div className=\"vertical-carousel__parallax\" ref={parallaxRef} style={{backgroundImage: `url(assets/${background})`}}>\n      {\n        items.map(({ image, title, subtitle }, i) => (\n          <div className=\"vertical-carousel__parallax__item\" key={i}>\n            <img src={`assets/${image}.png`} alt={image}/>\n            <div className=\"title\">{ title }</div>\n            <div className=\"subtitle\" dangerouslySetInnerHTML={{__html: subtitle }} />\n          </div>\n        ))\n      }\n    </div>\n  </section>\n}\n\nexport default VerticalCarousel;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport Chart from '../../Components/Chart/Chart';\nimport Footer from '../../Components/Footer/Footer';\nimport Header from '../../Components/Header/Header';\nimport Share from '../../Components/Share/Share';\nimport Ranking from '../../Components/Ranking/Ranking';\nimport RankingMini from '../../Components/RankingMini/RankingMini';\nimport Tip from '../../Components/Tip/Tip';\nimport VerticalCarousel from '../../Components/VerticalCarousel/VerticalCarousel';\n\nimport './Experiences.scss';\n\nconst title = 'professional experiences'\nconst subtitle = 'What do their jobs on the <strong>best companies</strong> show us?'\nconst items = [\n  {\n    image: \"calendar\",\n    title: \"30 months\",\n    subtitle: \"Is the average time on past experience,<br/>The average of all past experiences are <br/><strong>25 months</strong>.\"\n  },\n  {\n    image: \"building\",\n    title: \"4.6 companies\",\n    subtitle: \"Is the average number of past experiences,<br/>only <strong>14%</strong> has less than <strong>3 experiences</strong> and<br/><strong>50%</strong> has more than <strong>5 experiences</strong>.\"\n  },\n  { \n    image: \"people\",\n    title: \"18% worked at Google or Microsoft\",\n    subtitle: \"These are the most common background among top-company professionals.\"\n  }\n]\n\nconst lowStayRanking = {\n  title: 'Companies where engineers doesn\\'t stay for too long...',\n  items: [\n    {\n      title: \"average months\",\n      subitems: [\n        { company: \"linkedin\", number: \"15\" },\n        { company: \"hewlett-packard\", number: \"16\" },\n        { company: \"booking\", number: \"17\" },\n        { company: \"intel\", number: \"17\" },\n        { company: \"zoom\", number: \"18\" }\n      ]\n    },\n    {\n      title: \"average excluding the first 2 years\",\n      subitems: [\n        { company: \"intel\", number: \"35\", arrow: \"up\" },\n        { company: \"linkedin\", number: \"35\", arrow: \"down\" },\n        { company: \"facebook\", number: \"37\", arrow: \"up\" },\n        { company: \"booking\", number: \"38\", arrow: \"down\" },\n        { company: \"airbnb\", number: \"40\", arrow: \"up\" },\n      ]\n    }\n  ]\n}\n\nconst lowStayRankingTip = 'Excluding the first 2 years from the average show us companies where top-company engineers don\\'t leave too early but don\\'t stay for much longer as well.'\nconst highStayRankingTip = 'The total average is inflated by engineers which stayed almost a decade on the company, removing them we have a better average.'\nconst averageYearsChartTip = 'Top-company engineers stay 50% more in the first 2 years at top-companies, in addition, they also stay longer in the long term compared to non-top companies.'\nconst averageMonthsChartTip = 'Although engineers are known for not staying much longer in a company, they stay more and more at each new job.'\n\nconst highStayRanking = {\n  title: 'Companies where engineers stays more',\n  items: [\n    {\n      title: \"average months\",\n      subitems: [\n        { company: \"twitter\", number: \"15\" },\n        { company: \"netflix\", number: \"16\" },\n        { company: \"google\", number: \"17\" },\n        { company: \"adobe\", number: \"17\" },\n        { company: \"apple\", number: \"18\" }\n      ]\n    },\n    {\n      title: \"average excluding more than 60 months\",\n      subitems: [\n        { company: \"twitter\", number: \"31\", arrow: \"-\" },\n        { company: \"oracle\", number: \"29\", arrow: \"up\" },\n        { company: \"uber\", number: \"27\", arrow: \"up\" },\n        { company: \"adobe\", number: \"25\", arrow: \"-\" },\n        { company: \"netflix\", number: \"24\", arrow: \"down\" },\n      ]\n    }\n  ]\n}\n\nconst averageYearsChart =  {\n  title: 'Average years working on past companies',\n  chartOptions: {\n    type: 'line',\n    data: {\n        labels: [\"\", \"1\", \"\", \"2\", \"\", \"3\", \"\", \"4\", \"\", \"5\", \"5+\"],\n        datasets: [{\n            label: '% on top companies',\n            backgroundColor: 'rgba(255, 255, 255, 0.5)',\n            data: [7,16,16,13,10,9,6,6,3,5,12]\n        },{\n            label: '% on non-top companies',\n            backgroundColor: 'rgba(255, 0, 0, 1)',\n            data: [22,21,17,9,7,6,4,2,2,2,5]\n        }]\n    },\n    options: {\n      maintainAspectRatio: false,\n      legend: {\n        position: 'bottom'\n      }\n    }\n  }\n}\n\nconst averageMonthsChart = {\n  title: 'Average months working on past companies',\n  chartOptions: {\n    // The type of chart we want to create\n    type: 'bar',\n    // The data for our dataset\n    data: {\n        labels: [\"last\", \"2nd last\", \"3rd last\", \"4th last\", \"5th last\"],\n        datasets: [{\n            backgroundColor: '#002336',\n            data: [30, 26, 21, 18, 18]\n        }],\n    },\n    options: {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scales: {\n          yAxes: [{\n              ticks: {\n                  min: 0,\n                  fontColor: '#002336'\n              }\n          }],\n          xAxes: [{\n            ticks: {\n                fontColor: '#002336'\n            }\n        }]\n      }\n    }\n  }\n}\n\nconst lowStayRankingMini = {\n  title: '% of top-company engineers departures before 1 year',\n  items: [\n    { company: 'hewlett-packard', number: '54' },\n    { company: 'microsoft', number: '48' },\n    { company: 'zoom', number: '46' },\n    { company: 'intel', number: '44' }\n  ]\n}\n\nconst highStayRankingMini = {\n  title: '% of top-company engineers which stayed more than 60 months',\n  items: [\n    { company: 'netflix', number: '26' },\n    { company: 'twitter', number: '23' },\n    { company: 'apple', number: '21' },\n    { company: 'google', number: '19' }\n  ]\n}\n\nconst share = {\n  url: 'https://linkedtales.github.io/software-engineering-experiences',\n  title: 'Top Companies Software Engineers Experiences',\n  description: 'Discover free insights about your career based on statistics from thousands of top company professionals worldwide.',\n  image: 'https://linkedtales.github.io/assets/experiences.png'\n}\n\nconst App: React.FC = () =>\n  <main className=\"wrapper\">\n    <Helmet>\n      <title>LinkedTales - Top Software Engineer Professional Experiences</title>\n      <meta name=\"title\" content=\"LinkedTales\" />\n      <meta name=\"description\" content=\"Discover insights about your career based on statistics from thousands of top company professionals worldwide, it's totally free!\" />\n      <meta name=\"keywords\" content=\"statistics, company, career, profession, infographic\" />\n    \n      <meta property=\"og:url\" content={share.url} />\n      <meta property=\"og:title\" content={share.title} />\n      <meta property=\"og:description\" content={share.description} />\n      <meta property=\"og:image\" content={share.image} />\n\n      <meta property=\"twitter:url\" content={share.url} />\n      <meta property=\"twitter:title\" content={share.title} />\n      <meta property=\"twitter:description\" content={share.description} />\n      <meta property=\"twitter:image\" content={share.image} />\n    </Helmet>\n    <Header title={title} subtitle={subtitle} />\n    <VerticalCarousel items={items} background={\"background.jpg\"} />\n    <Ranking {...lowStayRanking} image={\"baby.png\"}  />\n    <Tip text={lowStayRankingTip} />\n    <RankingMini {...lowStayRankingMini} />\n    <Ranking {...highStayRanking} image={\"old.png\"} isAlternative={true} />\n    <Tip text={highStayRankingTip} isAlternative={true}/>\n    <RankingMini {...highStayRankingMini} isAlternative={true} />\n    <Chart {...averageYearsChart} />\n    <Tip text={averageYearsChartTip}/>\n    <Chart {...averageMonthsChart} isAlternative={true} />\n    <Tip text={averageMonthsChartTip} isAlternative={true}/>\n    <Share  />\n    <Footer isAlternative={true}  />\n    \n  </main>\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Index from './Pages/Index/Index'\nimport Experiences from './Pages/Experiences/Experiences'\n\nimport * as serviceWorker from './serviceWorker';\n\nconst index = <Router>\n    <Route path=\"/\" exact component={Index} />\n    <Route path=\"/software-engineer-professional-experiences\" component={Experiences} />\n    \n  </Router>\n\nReactDOM.render(index, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}